/**
 * Chat Sage API
 * Slack-like messaging platform with universal soft-deletes, selective partitioning, email-based verification, triggers for updatedAt, real-time features, error code enumeration, and recommended monorepo structure.
 *
 * The version of the OpenAPI document: v1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class User {
    'userId'?: number;
    'email'?: string;
    'displayName'?: string;
    'profilePicture'?: string;
    'statusMessage'?: string;
    /**
    * Updated by a timer to reflect active or inactive.
    */
    'lastKnownPresence'?: User.LastKnownPresenceEnum;
    'emailVerified'?: boolean;
    'deactivated'?: boolean;
    'theme'?: string;
    'createdAt'?: Date;
    'updatedAt'?: Date;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "userId",
            "baseName": "userId",
            "type": "number"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "displayName",
            "baseName": "displayName",
            "type": "string"
        },
        {
            "name": "profilePicture",
            "baseName": "profilePicture",
            "type": "string"
        },
        {
            "name": "statusMessage",
            "baseName": "statusMessage",
            "type": "string"
        },
        {
            "name": "lastKnownPresence",
            "baseName": "lastKnownPresence",
            "type": "User.LastKnownPresenceEnum"
        },
        {
            "name": "emailVerified",
            "baseName": "emailVerified",
            "type": "boolean"
        },
        {
            "name": "deactivated",
            "baseName": "deactivated",
            "type": "boolean"
        },
        {
            "name": "theme",
            "baseName": "theme",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return User.attributeTypeMap;
    }
}

export namespace User {
    export enum LastKnownPresenceEnum {
        Online = <any> 'ONLINE',
        Away = <any> 'AWAY',
        Dnd = <any> 'DND',
        Offline = <any> 'OFFLINE'
    }
}
